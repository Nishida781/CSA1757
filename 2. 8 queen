def print_board(board):
    for row in board:
        print(" ".join("Q" if col else "." for col in row))
    print("\n")

def is_safe(board, row, col, n):
   
    for i in range(col):
        if board[row][i] == 1:
            return False

   
    for i, j in zip(range(row, -1, -1), range(col, -1, -1)):
        if board[i][j] == 1:
            return False

   
    for i, j in zip(range(row, n, 1), range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    return True

def solve_n_queens(board, col, n):
   
    if col >= n:
        print_board(board)
        return True

   
    for i in range(n):
        if is_safe(board, i, col, n):
           
            board[i][col] = 1

            
            solve_n_queens(board, col + 1, n)

            

    return False


n = 8
board = [[0] * n for _ in range(n)]


solve_n_queens(board, 0, n)
